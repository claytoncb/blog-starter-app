{"version":3,"sources":["components/Nav.js","components/Comments.js","components/Article.js","components/ArticleEntry.js","firebaseConfig.js","services/articleService.js","services/authService.js","components/App.js","index.js"],"names":["Nav","articles","setArticle","map","a","onClick","title","id","Comments","comments","addComment","arName","name","useState","body","setBody","error","setError","onSubmit","e","preventDefault","trim","className","rows","value","onChange","target","type","com","date","Article","article","author","ArticleEntry","addArticle","setTitle","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","data","Date","addDoc","collection","docRef","dataC","getDocs","orderBy","limit","querySnapshot","docs","doc","SignIn","signInWithPopup","GoogleAuthProvider","SignOut","currentUser","displayName","signOut","App","setArticles","setComments","writing","setWriting","articleComments","setArticleComments","user","setUser","useEffect","onAuthStateChanged","useAuthentication","setName","fetchArticles","then","Object","keys","length","forEach","comment","fetchComments","createArticle","createComment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09f3ed90.chunk.js","sourcesContent":["export default function Nav({ articles, setArticle }) {\r\n  return (\r\n    <nav>\r\n      {!articles\r\n        ? \"No articles\"\r\n        : articles.map((a) => (\r\n            <p key={a.id} onClick={() => setArticle(a)}>\r\n              {a.title}\r\n            </p>\r\n          ))}\r\n    </nav>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nexport default function Comments({comments, addComment, arName, name}) {\r\n\r\n    const [body, setBody] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n  \r\n    function submit(e) {\r\n      setError(null);\r\n      e.preventDefault();\r\n      if (!body.trim()) {\r\n        setError(\"Both the title and body must be supplied\");\r\n      } else {\r\n        addComment({ arName, body, name });\r\n        setBody(\"\");\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <form onSubmit={submit}>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            Add Comment\r\n            <textarea\r\n              className=\"form\"\r\n              rows=\"2\"\r\n              value={body}\r\n              onChange={(e) => setBody(e.target.value)}\r\n            ></textarea>\r\n            <button type=\"submit\" >Create</button>\r\n          </form>\r\n          <div>Comment Section</div>\r\n          <nav>\r\n            {!comments\r\n              ? \"No comments\"\r\n              : comments.map((com) => (\r\n                <p key={com.date} >\r\n                    {com.name}\r\n                    {\" :  \"}{com.body}\r\n                    </p>\r\n                ))}\r\n          </nav>\r\n        </div>\r\n    )\r\n}\r\n          ","import Comments from \"./Comments\";\r\n\r\n\r\nexport default function Article({ article , title, comments, addComment, name }) {\r\n  return (\r\n    \r\n    <article>\r\n      <div className=\"article\">\r\n        {!article ? (\r\n          <p>No article selected</p>\r\n        ) : (\r\n          <section>\r\n            <div>\r\n              <h2>{article.title}</h2>\r\n              <h3>By: {article.author}</h3>\r\n              <p className=\"date\">{`Posted: ${article.date}`}</p>\r\n              <p className=\"body\">{article.body}</p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n      <div className=\"comments\">\r\n        {!article ? (\r\n          <p></p>\r\n        ) : (\r\n          <Comments comments={comments} addComment={addComment} arName={title} name={name} />\r\n        )}\r\n      </div>\r\n      \r\n    </article>\r\n  );\r\n}","import { useState } from \"react\";\r\n\r\nexport default function ArticleEntry({ addArticle, author }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  function submit(e) {\r\n    setError(null);\r\n    e.preventDefault();\r\n    if (!title.trim() || !body.trim()) {\r\n      setError(\"Both the title and body must be supplied\");\r\n    } else {\r\n      addArticle({ title, body, author});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        Title\r\n        <input value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        Body\r\n        <textarea\r\n          rows=\"8\"\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCin3qgWf3eGCBKo-YJsIg1YNdXEr2L3uA\",\r\n  authDomain: \"clay-firestore-app.firebaseapp.com\",\r\n  projectId: \"clay-firestore-app\",\r\n  storageBucket: \"clay-firestore-app.appspot.com\",\r\n  messagingSenderId: \"248934231677\",\r\n  appId: \"1:248934231677:web:4288e6119fd1b24fd20b14\",\r\n  measurementId: \"G-KNNF34K0NB\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth();\r\nexport const db = getFirestore(app);\r\n\r\n\r\n","// This service completely hides the data store from the rest of the app.\r\n// No other part of the app knows how the data is stored. If anyone wants\r\n// to read or write data, they have to go through this service.\r\n\r\nimport { db } from \"../firebaseConfig\"\r\nimport { collection, getDocs, addDoc, orderBy, limit } from \"firebase/firestore\"\r\n\r\nexport async function createArticle({ title, body, author }) {\r\n  const data = { title, body, author, date: new Date() }\r\n  const docRef = await addDoc(collection(db, \"articles\"), data)\r\n  return { id: docRef.id, ...data }\r\n}\r\n\r\nexport async function createComment({ arName, body, name }) {\r\n  const dataC = { arName, body, name, date: new Date() }\r\n  const docRef = await addDoc(collection(db, \"comments\"), dataC)\r\n  return { id: docRef.id, ...dataC }\r\n}\r\n\r\nexport async function fetchArticles() {\r\n  const querySnapshot = await getDocs(\r\n    collection(db, \"articles\"),\r\n    orderBy(\"date\", \"desc\"),\r\n    limit(50)\r\n  )\r\n  return querySnapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }))\r\n}\r\n\r\nexport async function fetchComments(article) {\r\n  const querySnapshot = await getDocs(\r\n    collection(db, \"comments\"),\r\n    orderBy(\"date\", \"desc\"),\r\n    limit(50)\r\n  );\r\n  return querySnapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }))\r\n}","import { useState, useEffect } from \"react\"\r\nimport { signInWithPopup, GoogleAuthProvider, signOut } from \"firebase/auth\"\r\nimport { auth } from \"../firebaseConfig\"\r\n\r\nexport function SignIn() {\r\n  return <button onClick={() => signInWithPopup(auth, new GoogleAuthProvider())}>Sign In</button>\r\n}\r\n\r\nexport function SignOut() {\r\n  return (\r\n    <div>\r\n      Hello, {auth.currentUser.displayName} &nbsp;\r\n      <button onClick={() => signOut(auth)}>Sign Out</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function useAuthentication() {\r\n  const [user, setUser] = useState(null)\r\n  useEffect(() => {\r\n    return auth.onAuthStateChanged((user) => {\r\n      user ? setUser(user) : setUser(null)\r\n    })\r\n  }, [])\r\n  return user\r\n}","import { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Article from \"./Article\";\r\nimport ArticleEntry from \"./ArticleEntry\";\r\nimport { fetchArticles, fetchComments, createArticle, createComment } from \"../services/articleService\";\r\nimport { SignIn, SignOut, useAuthentication } from \"../services/authService\"\r\nimport \"./App.css\";\r\n\r\n\r\nexport default function App() {\r\n  const [articles, setArticles] = useState([]);\r\n  const [article, setArticle] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [writing, setWriting] = useState(null);\r\n  const [articleComments, setArticleComments] = useState([]);\r\n  const user = useAuthentication();\r\n  const [name, setName] = useState(\"\");\r\n\r\n  // This is a trivial app, so just fetch all the articles once, when\r\n  // the app is loaded. A real app would do pagination. Note that\r\n  // \"fetchArticles\" is what gets the articles from the service and\r\n  // then \"setArticles\" writes them into the React state.\r\n\r\n  useEffect(() => {\r\n    setArticleComments([]);\r\n  }, [comments, article]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (user) fetchArticles().then(setArticles);\r\n    if (user) {\r\n      if (user.displayName) setName(user.displayName);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (article != null) {\r\n      if (comments != null) {\r\n        if (Object.keys(articleComments).length === 0) {\r\n          comments.forEach((comment) => {if (comment.arName === article.title) {\r\n            setArticleComments(articleComments => [...articleComments, comment]);\r\n          }})\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user) fetchComments(article).then(setComments);\r\n    if (article != null) {\r\n      if (article.title != null) {\r\n        setTitle(article.title);\r\n      }\r\n    }\r\n  }, [article, user]);\r\n  \r\n\r\n  // Update the \"database\" *then* update the internal React state. These\r\n  // two steps are definitely necessary.\r\n  function addArticle({ title, body, author }) {\r\n    createArticle({ title, body, author }).then((article) => {\r\n      setArticle(article);\r\n      setArticles([article, ...articles]);\r\n    });\r\n    setWriting(false);\r\n  }\r\n\r\n\r\n  function addComment({ arName, body, name }) {\r\n    createComment({ arName, body, name }).then((comment) => {\r\n      setComments([comment, ...comments]);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        Blog\r\n        {user && <button onClick={() => setWriting(true)}>New Article</button>}\r\n        {!user ? <SignIn /> : <SignOut />}\r\n      </header>\r\n\r\n      {!user ? \"\" : <Nav articles={articles} setArticle={setArticle}/>}\r\n\r\n      {!user ? (\r\n        <div></div>\r\n      ) : writing ? (\r\n        <ArticleEntry addArticle={addArticle} author={name} />\r\n      ) : (\r\n        <div>\r\n          <Article article={article} title={title} comments={articleComments} addComment={addComment} name={name} />\r\n        </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}